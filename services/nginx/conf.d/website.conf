server {
    listen 80;
    server_name 0.0.0.0;
    # server_name    website.domain.net;
    # rewrite ^ https://$http_host$request_uri? permanent;    # force redirect http to https
    # server_tokens off;

    location /rabbitmq {
        rewrite ^/rabbitmq/(.*)$ /$1 break;
        proxy_pass http://rabbitmq:15672;
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # auth_basic  "Restricted";
        # auth_basic_user_file /etc/nginx/.htpasswd;
    }

    location /flower {
        rewrite ^/flower/(.*)$ /$1 break;
        proxy_pass http://celery:5555;
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # auth_basic  "Restricted";
        # auth_basic_user_file /etc/nginx/.htpasswd;
    }

    location /admin {
        include uwsgi_params;
        uwsgi_pass backend:8000;
    }

    location /api {
        include uwsgi_params;
        uwsgi_pass backend:8000;
    }

    # Django admin static files
    location /static/admin/ {
        autoindex on;
        alias /var/www/;
    }

    location / {
        root   /var/www/;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    # web dev settings
    # location / {
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto https;
    #     proxy_set_header Host $http_host;
    #     proxy_redirect off;
    #     if (!-f $request_filename) {
    #         proxy_pass http://web:3000;
    #         break;
    #     }
    # }
}


server {
    # SSL is disabled by default
    # listen 443 ssl;
    # server_name         team-capacity.domain.nsn.net;
    # ssl_certificate     /etc/ssl/public.crt;
    # ssl_certificate_key /etc/ssl/private.key;
    # ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    # ssl_ciphers         HIGH:!aNULL:!MD5;
    # client_max_body_size 4G;

    # move all rules from HTTP server to HTTPS when SSL enabled
}
